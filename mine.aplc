:Class mine
    (⎕IO ⎕ML)←0 1

    :Field Shared ReadOnly LEGEND←' 12345678'
    :Field Shared ReadOnly WHITE←'.' 
    :Field Shared ReadOnly STUFF←'@' 
    :Field Shared ReadOnly FLAGS←'?'

    :Field Public field←⍬
    :Field Public f←0
    :Field Public mines←⍬
    :Field Public m←0

    ∇   r←Init arg
        :Access Public
        (f m)←arg
        field←f⍴WHITE
        mines←⍬
        r←0
    ∇

    ∇   make2 arg
        :Access Public
        :Implements Constructor
        {}Init arg
    ∇

    ∇   Bury posn;⎕RL
        ⎕RL←0 60⊥⎕TS[5 4]
        mines←posn{~(1-0⌷⍺)⊖(1-1⌷⍺)⌽⍵↑3 3⍴1}f
        mines∧←(⊢∧∘⊖∘⌽⍥(⊢∧∘⍉⍥(⊢(⊣@0⍤0 1)⍨≢↑0,0=?⍨⍤(¯2+≢))⍉)⊖∘⌽)f⍴1
        mines←m{n←+/,⍵ ⋄ (((n↑⍺⍴1)[?⍨n])@⊢)⍵}mines
    ∇

    ∇   r←wins
        r←mines≡(WHITE∘=∨FLAGS∘=)field
    ∇

    Open←{
        ⍝ ⍵ ←→ posn
        WHITE≠⍵⌷field:1 ⋄ 1=⍵⌷mines:0
        n←,(f⌊⍵+2)(⊂⍤⊢+⍳⍤-)0⌈⍵-1
        c←+/mines[n]
        field[⊂⍵]←LEGEND[c]
        0=c:1⊣∇¨n 
        1
    }

    Flag←{
        field[⊂⍵]←{
            FLAGS≡⍵:WHITE ⋄ WHITE≡⍵:FLAGS ⋄ ⍵
        }field[⊂⍵]
        1
    }

    ∇   r←kind Game posn;s
        :Access Public
        :If mines≡⍬
            Bury posn
        :EndIf
        s←kind{⍺≡0:Open ⍵ ⋄ Flag ⍵}posn
        r←{⍵≡0:¯1 ⋄ wins}s
        :If r≢0 
            field←(STUFF@{mines})field
        :EndIf
    ∇

    :Class dummy
        :Field inp←0 0
        :Field obj
        ∇   make1 arg
            :Access Public
            :Implements Constructor
            obj←arg
        ∇ 
        Disp←{⎕IO←0
            sin←1 2×⍺ ⋄ dex←0 2+sin ⋄ wid←1⌷⍴⍵ 
            Spc←{' ',⍨⊃⍪/,(⊂' '),⍪⍵} ⋄ ace←(Spc⍤1)⍵
            (h w)←⍴mat←(']'@(⊂dex))('['@(⊂sin))ace
            sep←,[¯0.5]'┼──',⍨w⍴'─'
            lst←,[¯0.5]'│  ',⍨Spc wid⍴⎕D
            ⎕←lst⍪⍨sep⍪⍨(⍳h)({⍵,'│ ',¯1↑⍕⍺}⍤0 1)mat
        }
        ∇   loop;r
            :Access Public
            :Repeat
                inp Disp obj.field
            :Until 0≢r←0 obj.Game inp←⎕
            inp Disp obj.field
            :If r≡1
                'Win'
            :ElseIf r≡¯1
                'Boom'
            :EndIf
        ∇
    :EndClass

    :Field Public Shared front←dummy

    ∇   {lef} Sweep arg;mf;mm;mo;mb
        :Access Public Shared
        :If 0≠⎕NC'lef'
            mf←2⍴lef ⋄ mm←⊃∊arg
        :ElseIf arg≡1
            mf←16 16 ⋄ mm←40
        :ElseIf arg≡2
            mf←30 16 ⋄ mm←99
        :Else
            mf←9  9  ⋄ mm←10
        :EndIf

        mo←⎕NEW mine (mf mm)
        mb←⎕NEW front mo
        mb.loop
    ∇

:EndClass
